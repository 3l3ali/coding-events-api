// <auto-generated />
using System;
using CodingEventsAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CodingEventsAPI.Data.Migrations
{
    [DbContext(typeof(CodingEventsDbContext))]
    [Migration("20200406165435_Tags_unique_name")]
    partial class Tags_unique_name
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("CodingEventsAPI.Models.CodingEvent", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Title")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("CodingEvents");
                });

            modelBuilder.Entity("CodingEventsAPI.Models.CodingEventTag", b =>
                {
                    b.Property<long>("TagId")
                        .HasColumnType("bigint");

                    b.Property<long>("CodingEventId")
                        .HasColumnType("bigint");

                    b.HasKey("TagId", "CodingEventId");

                    b.HasIndex("CodingEventId");

                    b.ToTable("CodingEventTag");
                });

            modelBuilder.Entity("CodingEventsAPI.Models.Tag", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("CodingEventsAPI.Models.CodingEventTag", b =>
                {
                    b.HasOne("CodingEventsAPI.Models.CodingEvent", "CodingEvent")
                        .WithMany("CodingEventTags")
                        .HasForeignKey("CodingEventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CodingEventsAPI.Models.Tag", "Tag")
                        .WithMany("CodingEventTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
